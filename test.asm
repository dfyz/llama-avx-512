section .text
global _start

n_blocks equ 10_000
n_bytes equ 20 * n_blocks
iters equ 100000

clang:
    mov r8, n_blocks
    mov r9, 0xffffffffff
    vmovaps zmm1, [rel float_perm]
    vmovdqa64 zmm2, [rel byte_perm]
    vpbroadcastq zmm3, qword [rel bit_perm]
    vmovdqa64 zmm4, [rel and_mask]
    vmovdqa64 zmm5, [rel sub_8]
    vpbroadcastd zmm6, dword [rel and_mask_short]
    vpbroadcastd zmm8, dword [rel mask_8_short]

    xor rdi, rdi

outer_loop_clang:
    vpxord  xmm17, xmm17, xmm17
    xor r15, r15
    xor ebx, ebx

loop_clang:
    kmovq   k1, r9
    vmovdqu8 zmm18{k1}{z}, [rdx+rbx]
    vmovdqu8 zmm19{k1}{z}, [rax+rbx]
    vmulps  zmm20, zmm18, zmm19
    vpermps zmm20, zmm1, zmm20
    vpermb  zmm18, zmm2, zmm18
    vpmultishiftqb zmm18, zmm3, zmm18
    vpandd  zmm18, zmm18, zmm6
    vpermb  zmm19, zmm2, zmm19
    vpmultishiftqb zmm19, zmm3, zmm19
    vpandq  zmm19, zmm19, zmm4
    vpaddb  zmm19, zmm19, zmm5
    vpxord  xmm21, xmm21, xmm21
    vpdpbusds zmm21, zmm18, zmm19
    vpxord  xmm18, xmm18, xmm18
    vpdpbusds zmm18, zmm8, zmm19
    vpsubd  zmm18, zmm21, zmm18
    vcvtdq2ps zmm18, zmm18
    vfmadd231ps zmm17, zmm20, zmm18
    add     r15, 0x2
    add     rbx, 0x28
    cmp     r15, r8
    jb      loop_clang

    inc rdi
    cmp rdi, iters
    jne outer_loop_clang

    ret


gcc:
    mov r8, rdx
    mov r9, rax
    mov rsi, rax
    add rsi, n_bytes

    mov     rax, 0xffffffffff
    kmovq   k1, rax

    vmovdqa32 zmm8, [rel float_perm]
    vmovdqa64 zmm7, [rel byte_perm]
    vmovdqa64 zmm6, [rel bit_perm_full]

    mov eax, 0xf0f0f0f
    vpbroadcastd zmm5, eax
    mov eax, 0xfffffff8
    vpbroadcastb zmm11, eax
    mov eax, 0x8080808
    vpbroadcastd zmm10, eax

    xor rdi, rdi

outer_loop_gcc:
    vxorps  xmm3, xmm3, xmm3
    vpxor   xmm4, xmm4, xmm4
    mov rdx, r8
    mov rax, r9

loop_gcc:
    vmovdqu8 zmm0{k1}{z}, [rdx]
    vmovdqu8 zmm1{k1}{z}, [rax]
    vmovdqa32 zmm21, zmm4
    vmovdqa32 zmm22, zmm4
    add rax, 0x28
    add rdx, 0x28
    vpermps zmm2, zmm8, zmm0
    vpermb  zmm0, zmm7, zmm0
    vpermps zmm9, zmm8, zmm1
    vpmultishiftqb zmm0, zmm6, zmm0
    vpermb  zmm1, zmm7, zmm1
    vmulps  zmm2, zmm2, zmm9
    vpmultishiftqb zmm1, zmm6, zmm1
    vpandd  zmm0, zmm0, zmm5
    vpaddb  zmm0, zmm0, zmm11
    vpandd  zmm1, zmm1, zmm5
    vpdpbusds zmm21, zmm1, zmm0
    vpdpbusds zmm22, zmm10, zmm0
    vpsubd  zmm21, zmm21, zmm22
    vcvtdq2ps zmm21, zmm21
    vfmadd231ps zmm3, zmm2, zmm21
    cmp     rsi, rax
    jne     loop_gcc

    inc rdi
    cmp rdi, iters
    jne outer_loop_gcc

    ret


_start:
    lea rdx, [rel vec1]
    lea rax, [rel vec2]

    call clang
    ; call gcc

    xor rdi, rdi
    mov rax, 0x3c
    syscall

section .data
    vec1: db n_bytes dup (0x3d)
    vec2: db n_bytes dup (0x3d)

    float_perm:
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00

    byte_perm:
    db 0x04, 0x04, 0x05, 0x05, 0x06, 0x06, 0x07, 0x07, 0x08, 0x08, 0x09, 0x09, 0x0a, 0x0a, 0x0b, 0x0b, 0x0c, 0x0c, 0x0d, 0x0d, 0x0e, 0x0e, 0x0f, 0x0f, 0x10, 0x10, 0x11, 0x11, 0x12, 0x12, 0x13, 0x13, 0x18, 0x18, 0x19, 0x19, 0x1a, 0x1a, 0x1b, 0x1b, 0x1c, 0x1c, 0x1d, 0x1d, 0x1e, 0x1e, 0x1f, 0x1f, 0x20, 0x20, 0x21, 0x21, 0x22, 0x22, 0x23, 0x23, 0x24, 0x24, 0x25, 0x25, 0x26, 0x26, 0x27, 0x27

    and_mask:
    db 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f

    sub_8:
    db 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8

    bit_perm_full:
    db 0x00, 0x0c, 0x10, 0x1c, 0x20, 0x2c, 0x30, 0x3c, 0x00, 0x0c, 0x10, 0x1c, 0x20, 0x2c, 0x30, 0x3c, 0x00, 0x0c, 0x10, 0x1c, 0x20, 0x2c, 0x30, 0x3c, 0x00, 0x0c, 0x10, 0x1c, 0x20, 0x2c, 0x30, 0x3c, 0x00, 0x0c, 0x10, 0x1c, 0x20, 0x2c, 0x30, 0x3c, 0x00, 0x0c, 0x10, 0x1c, 0x20, 0x2c, 0x30, 0x3c, 0x00, 0x0c, 0x10, 0x1c, 0x20, 0x2c, 0x30, 0x3c, 0x00, 0x0c, 0x10, 0x1c, 0x20, 0x2c, 0x30, 0x3c

    bit_perm:
    dq 0x3c302c201c100c00

    and_mask_short:
    dd 0xf0f0f0f

    mask_8_short:
    dd 0x8080808
