section .text
global _start

n_blocks equ 10_000
n_bytes equ 40 * n_blocks
iters equ 100000

clang:
    mov r8, n_blocks
    mov r9, 0xffffffffff
    vmovaps zmm1, [rel data_zmm1]
    vmovdqa64 zmm2, [rel data_zmm2]
    vpbroadcastq zmm3, qword [rel data_zmm3]
    vmovdqa64 zmm4, [rel data_zmm4]
    vmovdqa64 zmm5, [rel data_zmm5]
    vpbroadcastd zmm6, dword [rel data_zmm6]
    vpbroadcastd zmm8, dword [rel data_zmm8]

    xor rdi, rdi

outer_loop:
    vpxord  xmm17, xmm17, xmm17
    xor r15, r15
    xor ebx, ebx

loop:
    kmovq   k1, r9
    vmovdqu8 zmm18{k1}{z}, [rdx+rbx]
    vmovdqu8 zmm19{k1}{z}, [rax+rbx]
    vmulps  zmm20, zmm18, zmm19
    vpermps zmm20, zmm1, zmm20
    vpermb  zmm18, zmm2, zmm18
    vpmultishiftqb zmm18, zmm3, zmm18
    vpandd  zmm18, zmm18, zmm6
    vpermb  zmm19, zmm2, zmm19
    vpmultishiftqb zmm19, zmm3, zmm19
    vpandq  zmm19, zmm19, zmm4
    vpaddb  zmm19, zmm19, zmm5
    vpxord  xmm21, xmm21, xmm21
    vpdpbusds zmm21, zmm18, zmm19
    vpxord  xmm18, xmm18, xmm18
    vpdpbusds zmm18, zmm8, zmm19
    vpsubd  zmm18, zmm21, zmm18
    vcvtdq2ps zmm18, zmm18
    vfmadd231ps zmm17, zmm20, zmm18
    add     r15, 0x2
    add     rbx, 0x28
    cmp     r15, r8
    jb      loop

    inc rdi
    cmp rdi, iters
    jne outer_loop

    ret

_start:
    lea rdx, [rel vec1]
    lea rax, [rel vec2]

    call clang
    ; call gcc_loop

    xor rdi, rdi
    mov rax, 0x3c
    syscall

section .data
    vec1: db n_bytes dup (0x3d)
    vec2: db n_bytes dup (0x3d)

    data_zmm1:
    db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00

    data_zmm2:
    db 0x04, 0x04, 0x05, 0x05, 0x06, 0x06, 0x07, 0x07, 0x08, 0x08, 0x09, 0x09, 0x0a, 0x0a, 0x0b, 0x0b, 0x0c, 0x0c, 0x0d, 0x0d, 0x0e, 0x0e, 0x0f, 0x0f, 0x10, 0x10, 0x11, 0x11, 0x12, 0x12, 0x13, 0x13, 0x18, 0x18, 0x19, 0x19, 0x1a, 0x1a, 0x1b, 0x1b, 0x1c, 0x1c, 0x1d, 0x1d, 0x1e, 0x1e, 0x1f, 0x1f, 0x20, 0x20, 0x21, 0x21, 0x22, 0x22, 0x23, 0x23, 0x24, 0x24, 0x25, 0x25, 0x26, 0x26, 0x27, 0x27

    data_zmm4:
    db 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f

    data_zmm5:
    db 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8

    data_zmm3:
    dq 0x3c302c201c100c00

    data_zmm6:
    dd 0xf0f0f0f

    data_zmm8:
    dd 0x8080808
